{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["const cardTemplate = document.querySelector('#card-template').content;\r\nexport const createCard = ({ cardData, onDelete, onLikeCard, onOpenPopupData }) => {\r\n  const cardElement = cardTemplate.querySelector('.places__item.card').cloneNode(true);\r\n  const deleteButton = cardElement.querySelector('.card__delete-button');\r\n  const cardLikeButton = cardElement.querySelector('.card__like-button');\r\n  const cardImg = cardElement.querySelector('.card__image');\r\n  const cardTitle = cardElement.querySelector('.card__title');\r\n  const cardLikes = cardElement.querySelector('.card__like-counter');\r\n  cardImg.src = cardData.link;\r\n  cardImg.alt = cardData.name;\r\n  cardTitle.textContent = cardData.name;\r\n  cardLikes.textContent = cardData.likes.length;\r\n  cardImg.addEventListener('click', () => {\r\n    onOpenPopupData(cardData.link, cardData.name);\r\n  });\r\n\r\n  if (cardData.owner._id !== cardData.ownerId) {\r\n    deleteButton.style.display = 'none';\r\n  }\r\n\r\n  if (cardData.likes.length > 0) {\r\n    (cardData.likes).forEach(like => {\r\n      if (like._id === cardData.ownerId) {\r\n        cardLikeButton.classList.add('card__like-button_is-active');\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteButton.addEventListener('click', () => {\r\n    onDelete(cardData._id, cardElement);\r\n  });\r\n\r\n  cardLikeButton.addEventListener('click', () => {\r\n    onLikeCard(cardData._id, cardElement);\r\n  });\r\n  \r\n  return cardElement;\r\n}\r\n\r\nexport const displayDeleteCard = (element) => {\r\n    element.remove();\r\n}\r\n\r\nexport const displayLikeCard = (cardElement) => {\r\n  const cardLikeButton = cardElement.querySelector('.card__like-button');\r\n  cardLikeButton.classList.toggle('card__like-button_is-active');\r\n};\r\n\r\nexport const updateCardLikes = (cardElement, likes) => {\r\n  const cardLikes = cardElement.querySelector('.card__like-counter');\r\n  cardLikes.textContent = likes;\r\n};\r\n","export { openPopup, closePopup };\r\n\r\nfunction openPopup (popup) {\r\n  popup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', handleEscClosePopup);  \r\n};\r\n\r\nfunction closePopup (popup) {\r\n  popup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', handleEscClosePopup);\r\n  popup.querySelector('.popup__form').reset();\r\n};\r\n\r\nfunction handleEscClosePopup (evt) {\r\n  if (evt.key === 'Escape') {\r\n    const openedPopup = document.querySelector('.popup_is-opened');\r\n    closePopup(openedPopup);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","export { enableValidation, clearValidation };\r\n\r\nconst enableValidation = (validationConfig) => {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach(formElement => {\r\n    formElement.addEventListener('submit', setEventListeners(formElement, validationConfig));\r\n  })\r\n};\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  inputList.forEach(inputElement => {\r\n    inputElement.addEventListener('input', () => {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n    })\r\n  })\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity('');\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n    toggleButtonState(inputList, buttonElement, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n    toggleButtonState(inputList, buttonElement, validationConfig);\r\n  }\r\n};\r\n\r\nconst showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.textContent = '';\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  })\r\n};\r\n\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n    buttonElement.disabled = true;\r\n  } else {\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n    buttonElement.disabled = false;\r\n  }\r\n};\r\n\r\nconst clearValidation = (profileForm, validationConfig) => {\r\n  const inputList = Array.from(profileForm.querySelectorAll(validationConfig.inputSelector));\r\n  inputList.forEach(inputElement => {\r\n    hideInputError(profileForm, inputElement, validationConfig);\r\n  })\r\n  toggleButtonState(inputList, profileForm.querySelector(validationConfig.submitButtonSelector), validationConfig);\r\n};","const config = {\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/wff-cohort-18',\r\n  headers: {\r\n    authorization: 'ee5d4bf5-3539-4ccf-a241-fba8d06d877d',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nconst handleResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\nconst handleError = (err) => {\r\n  console.log(err);\r\n  return Promise.reject(err);\r\n};\r\n\r\nexport const getUserInfo = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: {\r\n      authorization: config.headers.authorization,\r\n      'Content-Type': config.headers['Content-Type']\r\n    }\r\n  })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: {\r\n      authorization: config.headers.authorization,\r\n      'Content-Type': config.headers['Content-Type']\r\n    }\r\n  })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const editUserInfo = (name, about) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      authorization: config.headers.authorization,\r\n      'Content-Type': config.headers['Content-Type']\r\n    },\r\n    body: JSON.stringify({\r\n      name,\r\n      about\r\n    })\r\n  })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const addCard = (name, link) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: {\r\n      authorization: config.headers.authorization,\r\n      'Content-Type': config.headers['Content-Type']\r\n    },\r\n    body: JSON.stringify({\r\n      name,\r\n      link\r\n    })\r\n  })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const fetchDeleteCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      authorization: config.headers.authorization\r\n    }\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n};\r\n\r\nexport const putLike = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      authorization: config.headers.authorization\r\n    }\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n};\r\n\r\nexport const deleteLike = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      authorization: config.headers.authorization\r\n    }\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n};\r\n\r\nexport const patchAvatar = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      authorization: config.headers.authorization,\r\n      'Content-Type': config.headers['Content-Type']\r\n    },\r\n    body: JSON.stringify({\r\n      avatar\r\n    })\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport const checkImgUrl = (url) => {\r\n  return fetch(url, {\r\n    method: 'HEAD'\r\n  })\r\n    .then(res => {\r\n      if (res.ok && res.headers.get('content-type').startsWith('image/')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n}","import './pages/index.css';\r\nimport { createCard, displayDeleteCard, displayLikeCard, updateCardLikes } from './components/card.js';\r\nimport { openPopup, closePopup } from './components/modal.js';\r\nimport { enableValidation, clearValidation } from './components/validation.js';\r\nimport { \r\n  getUserInfo, \r\n  getInitialCards, \r\n  editUserInfo, \r\n  addCard,\r\n  fetchDeleteCard,\r\n  putLike,\r\n  deleteLike,\r\n  patchAvatar,\r\n  checkImgUrl\r\n} from './components/api.js';\r\n\r\nconst cardsContainer = document.querySelector('.places__list');\r\nconst popups = document.querySelectorAll('.popup');\r\nconst profileButton = document.querySelector('.profile__edit-button'); \r\nconst profilePopup = document.querySelector('.popup_type_edit');\r\nconst newCardAddButton = document.querySelector('.profile__add-button');\r\nconst newCardAddPopup = document.querySelector('.popup_type_new-card');\r\nconst popupImg = document.querySelector('.popup_type_image');\r\nconst popupImgImage = document.querySelector('.popup__image');\r\nconst popupImgCaption = document.querySelector('.popup__caption');\r\nconst profileForm = document.forms['edit-profile'];\r\nconst profileFormNameInput = profileForm.elements['name'];\r\nconst profileFormJobInput = profileForm.elements['description'];\r\nconst profileName = document.querySelector('.profile__title');\r\nconst profileJob = document.querySelector('.profile__description');\r\nconst profileImg = document.querySelector('.profile__image');\r\nconst addCardForm = document.forms['new-place'];\r\nconst addCardFormNameInput = addCardForm.elements['place-name'];\r\nconst addCardFormLinkInput = addCardForm.elements['link'];\r\nconst confirmationPopup = document.querySelector('.popup_type_confirmation');\r\nconst confirmationForm = document.forms['delete-card-confirmation'];\r\nconst editAvatarPopup = document.querySelector('.popup_type_edit-avatar');\r\nconst editAvatarForm = document.forms['edit-avatar'];\r\nconst editAvatarFormLinkInput = editAvatarForm.elements['link'];\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n}\r\n\r\nlet idCardForDelete = null;\r\nlet cardElementForDelete = null;\r\nlet userId = null;\r\n\r\nconst renderCard = (item, method = \"prepend\") => {\r\n  const cardDataConfig = {\r\n    onOpenPopupData: openPopupData,\r\n    onDelete: cardDelete,\r\n    onLikeCard: likeCard\r\n  };\r\n  const itemObject = {\r\n    cardData: item\r\n  }\r\n  const card = createCard({ ...itemObject, ...cardDataConfig });\r\n  cardsContainer[method](card);\r\n}\r\n\r\nconst handleAddCardForm = (evt) => {\r\n  evt.preventDefault();\r\n  const addCardSubmitButton = evt.submitter;\r\n  addCardSubmitButton.disabled = true; \r\n  addCardSubmitButton.textContent = 'Сохранение...';\r\n  addCardSubmitButton.style.cursor = 'not-allowed';\r\n  addCard(addCardFormNameInput.value, addCardFormLinkInput.value)\r\n    .then((result) => {\r\n      const card = renderCard({ ...result, ownerId: userId });\r\n      evt.target.reset();\r\n      closePopup(newCardAddPopup);\r\n      return card;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n    .finally(() => {\r\n      addCardSubmitButton.disabled = false;\r\n      addCardSubmitButton.textContent = 'Сохранить';\r\n      addCardSubmitButton.style.cursor = 'pointer';\r\n    });\r\n}\r\n\r\nconst openPopupData = (link, name) => {\r\n  popupImgImage.src = link;\r\n  popupImgImage.alt = name;\r\n  popupImgCaption.textContent = name;\r\n  openPopup(popupImg);\r\n};\r\n\r\nconst handleProfileFormSubmit = (evt) => {\r\n  evt.preventDefault();\r\n  const profileFormButton = evt.submitter;\r\n  profileFormButton.disabled = true; \r\n  profileFormButton.style.cursor = 'not-allowed';\r\n  profileFormButton.textContent = 'Сохранение...';\r\n  editUserInfo(profileFormNameInput.value, profileFormJobInput.value)\r\n    .then((result) => {\r\n      profileName.textContent = result.name;\r\n      profileJob.textContent = result.about;\r\n      evt.target.reset();\r\n      closePopup(profilePopup);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      profileFormButton.disabled = false; \r\n      profileFormButton.textContent = 'Сохранить';\r\n      profileFormButton.style.cursor = 'pointer';\r\n    });\r\n};\r\n\r\nconst handleEditAvatarForm = (evt) => {\r\n  evt.preventDefault();\r\n  const editAvatarSubmitButton = evt.submitter;\r\n  editAvatarSubmitButton.disabled = true; \r\n  editAvatarSubmitButton.textContent = 'Сохранение...';\r\n  editAvatarSubmitButton.style.cursor = 'not-allowed';\r\n  const imgUrl = editAvatarFormLinkInput.value;\r\n  checkImgUrl(imgUrl)\r\n    .then((isValid) => {\r\n      if (isValid) {\r\n        patchAvatar(imgUrl)\r\n          .then((result) => {\r\n            profileImg.style.backgroundImage = 'url(' + result.avatar + ')';\r\n            evt.target.reset();\r\n            clearValidation(editAvatarForm, validationConfig);\r\n            closePopup(editAvatarPopup);\r\n          })\r\n          .catch((err) => {\r\n            console.log('Ошибка в получении картинки',err);\r\n          });\r\n      } else {\r\n        console.log('Полученный url не является изображением');\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log('Ошибка в проверке юрла', err);\r\n    })\r\n    .finally(() => {\r\n      editAvatarSubmitButton.disabled = false; \r\n      editAvatarSubmitButton.textContent = 'Сохранить';\r\n      editAvatarSubmitButton.style.cursor = 'pointer';\r\n    })\r\n}\r\n\r\nconst cardDelete = (cardId, cardElement) => {\r\n  idCardForDelete = cardId;\r\n  cardElementForDelete = cardElement;\r\n  openPopup(confirmationPopup);\r\n};\r\n\r\nconst likeCard = (cardId, cardElement) => {\r\n  if (cardElement.querySelector('.card__like-button').classList.contains('card__like-button_is-active')) {\r\n    deleteLike(cardId)\r\n      .then((result) => {\r\n        updateCardLikes(cardElement, result.likes.length);\r\n        displayLikeCard(cardElement);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  } else {\r\n    putLike(cardId)\r\n    .then((result) => {\r\n      updateCardLikes(cardElement, result.likes.length);\r\n      displayLikeCard(cardElement);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n};\r\n\r\nprofileButton.addEventListener('click', () => {\r\n  openPopup(profilePopup);\r\n  clearValidation(profileForm, validationConfig);\r\n  profileFormNameInput.value = profileName.textContent;\r\n  profileFormJobInput.value = profileJob.textContent;\r\n});\r\n\r\nnewCardAddButton.addEventListener('click', () => {\r\n  openPopup(newCardAddPopup);\r\n  clearValidation(addCardForm, validationConfig);\r\n  addCardFormNameInput.value = '';\r\n  addCardFormLinkInput.value = '';\r\n});\r\n\r\nprofileImg.addEventListener('click', () => {\r\n  openPopup(editAvatarPopup);\r\n  clearValidation(editAvatarForm, validationConfig);\r\n  editAvatarFormLinkInput.value = '';\r\n});\r\n\r\npopups.forEach((popup) => {\r\n  popup.addEventListener('mousedown', (evt) => {\r\n    if (evt.target.classList.contains('popup_is-opened')) {\r\n      closePopup(evt.target);\r\n    }\r\n    else if (evt.target.classList.contains('popup__close')) {\r\n      closePopup(popup);\r\n    }\r\n  })\r\n});\r\n\r\nprofileForm.addEventListener('submit', handleProfileFormSubmit);\r\naddCardForm.addEventListener('submit', handleAddCardForm); \r\neditAvatarForm.addEventListener('submit', handleEditAvatarForm);\r\n\r\nenableValidation(validationConfig);\r\n\r\nPromise.all([getUserInfo(), getInitialCards()])\r\n  .then((results) => {\r\n    userId = results[0]._id;\r\n    console.log(results[1]);\r\n    profileName.textContent = results[0].name;\r\n    profileJob.textContent = results[0].about;\r\n    profileImg.style.backgroundImage = 'url(' + results[0].avatar + ')';\r\n    results[1].forEach(cardData => {\r\n      renderCard({ ...cardData, ownerId: results[0]._id});\r\n      idCardForDelete = cardData._id;\r\n    })\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n\r\nconfirmationForm.addEventListener('submit', (evt) => {\r\n  evt.preventDefault();\r\n  if (idCardForDelete && cardElementForDelete) {\r\n    fetchDeleteCard(idCardForDelete)\r\n      .then((result) => {\r\n        if (result.message === 'Пост удалён') {\r\n          displayDeleteCard(cardElementForDelete);\r\n          idCardForDelete = null;\r\n          cardElementForDelete = null;\r\n          closePopup(confirmationPopup);\r\n        } else {\r\n          console.log(result.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n});\r\n\r\n\r\n\r\n"],"names":["cardTemplate","document","querySelector","content","displayLikeCard","cardElement","classList","toggle","updateCardLikes","likes","textContent","openPopup","popup","add","addEventListener","handleEscClosePopup","closePopup","remove","removeEventListener","reset","evt","key","checkInputValidity","formElement","inputElement","validationConfig","inputList","Array","from","querySelectorAll","inputSelector","buttonElement","submitButtonSelector","validity","patternMismatch","setCustomValidity","dataset","errorMessage","valid","hideInputError","toggleButtonState","showInputError","validationMessage","errorElement","concat","id","inputErrorClass","errorClass","some","hasInvalidInput","inactiveButtonClass","disabled","clearValidation","profileForm","forEach","config","handleResponse","res","ok","json","Promise","reject","status","handleError","err","console","log","cardsContainer","popups","profileButton","profilePopup","newCardAddButton","newCardAddPopup","popupImg","popupImgImage","popupImgCaption","forms","profileFormNameInput","elements","profileFormJobInput","profileName","profileJob","profileImg","addCardForm","addCardFormNameInput","addCardFormLinkInput","confirmationPopup","confirmationForm","editAvatarPopup","editAvatarForm","editAvatarFormLinkInput","formSelector","idCardForDelete","cardElementForDelete","userId","renderCard","item","_ref","cardData","onDelete","onLikeCard","onOpenPopupData","deleteButton","cardLikeButton","cardImg","cardTitle","cardLikes","method","arguments","length","undefined","cardDataConfig","openPopupData","cardDelete","likeCard","card","_objectSpread","cloneNode","src","link","alt","name","owner","_id","ownerId","style","display","like","cardId","contains","fetch","headers","authorization","then","catch","deleteLike","result","putLike","value","target","preventDefault","about","profileFormButton","submitter","cursor","body","JSON","stringify","finally","addCardSubmitButton","editAvatarSubmitButton","url","imgUrl","get","startsWith","isValid","avatar","backgroundImage","setEventListeners","enableValidation","all","results","message"],"sourceRoot":""}